definitions:
  Backup:
    properties:
      Files:
        items:
          $ref: '#/definitions/File'
        type: array
      Service:
        $ref: '#/definitions/Service'
    type: object
    x-go-package: github.com/swisscom/backman/router/api
  Duration:
    description: |-
      A Duration represents the elapsed time between two instants
      as an int64 nanosecond count. The representation limits the
      largest representable duration to approximately 290 years.
    format: int64
    type: integer
    x-go-package: time
  File:
    properties:
      Filename:
        type: string
      Filepath:
        type: string
      Key:
        type: string
      LastModified:
        format: date-time
        type: string
      Size:
        format: int64
        type: integer
    type: object
    x-go-package: github.com/swisscom/backman/router/api
  Retention:
    properties:
      Days:
        format: int64
        type: integer
      Files:
        format: int64
        type: integer
    type: object
    x-go-package: github.com/swisscom/backman/router/api
  Service:
    properties:
      Name:
        type: string
      Plan:
        type: string
      Provider:
        type: string
      Retention:
        $ref: '#/definitions/Retention'
      Schedule:
        type: string
      Timeout:
        $ref: '#/definitions/Duration'
      Type:
        type: string
    type: object
    x-go-package: github.com/swisscom/backman/router/api
  State:
    properties:
      At:
        format: date-time
        type: string
      Duration:
        $ref: '#/definitions/Duration'
      Filename:
        type: string
      Operation:
        type: string
      Service:
        $ref: '#/definitions/Service'
      Status:
        type: string
    type: object
    x-go-package: github.com/swisscom/backman/router/api
paths:
  /api/v1/backup/{service_type}/{service_name}:
    get:
      operationId: getBackups
      produces:
      - application/json
      responses:
        "200":
          description: Backup
          schema:
            $ref: '#/definitions/Backup'
      schemes:
      - http
      - https
      summary: Returns a full backup object for given service.
      tags:
      - backup
    post:
      operationId: createBackup
      produces:
      - application/json
      responses:
        "202":
          description: Service
          schema:
            $ref: '#/definitions/Service'
      schemes:
      - http
      - https
      summary: Creates a new backup for given service.
      tags:
      - backup
  /api/v1/backup/{service_type}/{service_name}/{filename}:
    delete:
      operationId: deleteBackup
      produces:
      - application/json
      responses:
        "204":
          description: ""
      schemes:
      - http
      - https
      summary: Deletes a backup file from S3 for given service.
      tags:
      - backup
    get:
      operationId: getBackup
      produces:
      - application/json
      responses:
        "200":
          description: Backup
          schema:
            $ref: '#/definitions/Backup'
      schemes:
      - http
      - https
      summary: Returns a single backup file object for given service.
      tags:
      - backup
  /api/v1/backup/{service_type}/{service_name}/{filename}/download:
    get:
      operationId: downloadBackup
      produces:
      - application/json
      responses:
        "200":
          description: ""
      schemes:
      - http
      - https
      summary: Download a backup file for given service.
      tags:
      - backup
  /api/v1/backups:
    get:
      operationId: listBackups
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/Backups'
      schemes:
      - http
      - https
      summary: Lists all backup objects.
      tags:
      - backup
  /api/v1/restore/{service_type}/{service_name}/{filename}:
    post:
      operationId: restoreBackup
      produces:
      - application/json
      responses:
        "202":
          description: Service
          schema:
            $ref: '#/definitions/Service'
      schemes:
      - http
      - https
      summary: Triggers a restore for given service.
      tags:
      - restore
  /api/v1/restore/{service_type}/{service_name}/{filename}/{target_name}:
    post:
      operationId: restoreBackupToTarget
      produces:
      - application/json
      responses:
        "202":
          description: Service
          schema:
            $ref: '#/definitions/Service'
      schemes:
      - http
      - https
      summary: Triggers a restore of a given service backup to a specific target service.
      tags:
      - restore
  /api/v1/service/{service_type}/{service_name}:
    get:
      operationId: getService
      produces:
      - application/json
      responses:
        "200":
          description: Service
          schema:
            $ref: '#/definitions/Service'
      schemes:
      - http
      - https
      summary: Returns a service instance.
      tags:
      - service
  /api/v1/services:
    get:
      operationId: listServices
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/Services'
      schemes:
      - http
      - https
      summary: Lists all services managed by backman.
      tags:
      - service
  /api/v1/state/{service_type}/{service_name}:
    get:
      operationId: getState
      produces:
      - application/json
      responses:
        "200":
          description: State
          schema:
            $ref: '#/definitions/State'
      schemes:
      - http
      - https
      summary: Returns current/last operation state of backup/restore.
      tags:
      - state
  /api/v1/states:
    get:
      operationId: listStates
      produces:
      - application/json
      responses:
        "200":
          $ref: '#/responses/States'
      schemes:
      - http
      - https
      summary: Lists current/last operation state of all service types.
      tags:
      - state
responses:
  Backups:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Backup'
      type: array
  Services:
    description: ""
    schema:
      items:
        $ref: '#/definitions/Service'
      type: array
  States:
    description: ""
    schema:
      items:
        $ref: '#/definitions/State'
      type: array
swagger: "2.0"
